! Initial condition for the velocity.
! This file contains the expression used for the initial
! streamfunction or velocity field (depending on the solver). 
! You can use the temporary real array R1 of size 
! (n,jsta:jend), and temporary complex arrays C1, C2 of size 
! (n,ista:iend) to do intermediate computations. The variable 
! u0 should control the global amplitude of the field, and 
! variables vparam0-9 can be used to control the amplitudes 
! of individual terms. At the end, the streamfunction should 
! be stored in the array ps, or the velocity field components 
! in the arrays vx and vy (plus vz in 2.5D solvers).

! Kelvin-Helmholtz (2D)
!     u0  : amplitude of the K-H profile
!     kdn : wave number of the K-H profile
!     kup : wave number of the perturbation
!     vparam0: amplitude of the perturbation

      DO j = jsta,jend
         IF (j.le.n/4) THEN
            DO i = 1,n
               R1(i,j) = -u0*kdn/(COSH(2*pi*kdn*(real(j,kind=GP)    &
                         -1)/real(n,kind=GP)))**2                   &
                         -vparam0*kup*SIN(2*pi*kup*(real(i,kind=GP) &
                         -1)/real(n,kind=GP))
            END DO
         ELSE IF ((j.ge.n/4+1).and.(j.le.3*n/4)) THEN
            DO i = 1,n
               R1(i,j) = u0*kdn/(COSH(2*pi*kdn*(2*real(j,kind=GP)   &
                         -real(n,kind=GP)+1)/real(n,kind=GP)))**2   &
                         -vparam0*kup*SIN(2*pi*kup*(real(i,kind=GP) &
                         -1)/real(n,kind=GP))
            END DO
         ELSE IF (j.ge.3*n/4+1) THEN
            DO i = 1,n
               R1(i,j) = -u0*kdn/(COSH(2*pi*kdn*(real(j,kind=GP)    &
                         -real(n,kind=GP))/real(n,kind=GP)))**2     &
                         -vparam0*kup*SIN(2*pi*kup*(real(i,kind=GP) &
                         -1)/real(n,kind=GP))
            END DO
         ENDIF
      END DO
      CALL fftp2d_real_to_complex(planrc,R1,ps,MPI_COMM_WORLD)
      DO i = ista,iend
         DO j = 1,n
            IF ((ka2(j,i).le.kmax).and.(ka2(j,i).ge.tiny)) THEN
               ps(j,i) = ps(j,i)/ka2(j,i)
            ELSE
               ps(j,i) = 0.
            ENDIF
         END DO
      END DO
